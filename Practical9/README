This is Practical 9

I write a function to check whether a square is magic. A square is a defined as a square matrix with integer elements.

Steps as per below:

1. Implement function isMagicSquare in file magic square.h to check whether a square is
magic. The function takes the matrix and checks whether every row, column and main
diagonals sum to the same value M.
2. Also implement the main function in file main.c to receive the matrix.
3. Read the matrix in from a file. Note that you will need to read in the size n of the matrix
first, before reading in the elements. You can arrange the input how you want in the file,as
long as it is read in correctly.
4. Check to see if it is magic.
5. Analyse the time complexity of the algorithm developed in function isMagicSquare and
express it in Big-Theta notation as a function of the square side n. You may need to run the
same calculations many times to get a significant time.

